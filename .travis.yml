language: php
dist: xenial
sudo: false

services:
   - mysql

cache:
  directories:
    - vendor
    # Cache directory for older Composer versions.
    - $HOME/.composer/cache/files
    # Cache directory for more recent Composer versions.
    - $HOME/.cache/composer/files

branches:
  only:
    - master
    - trunk
    - /^release\/\d+\.\d+(\.\d+)?(-\S*)?$/
    - /^hotfix\/\d+\.\d+(\.\d+)?(-\S*)?$/
    # Also build tags like 1.1.1 or 1.1 for deployment.
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

jobs:
  fast_finish: true
  include:
    - php: 7.3
      env: WP_VERSION=master
    - php: 7.2
      env: WP_VERSION=latest WP_MULTISITE=1 PHPLINT=1 PHPCS=1 COVERAGE=1
    - php: 5.2
      # As 'trusty' is not supporting PHP 5.2/5.3 anymore, we need to force using 'precise'.
      dist: precise
      env: WP_VERSION=5.0 WP_MULTISITE=1 PHPLINT=1 PHPUNIT=1
    - php: 5.6
      env: WP_VERSION=latest PHPUNIT=1
      # Use 'trusty' to test against MySQL 5.6, 'xenial' contains 5.7 by default.
      dist: trusty
    - php: 5.2
      # As 'trusty' is not supporting PHP 5.2/5.3 anymore, we need to force using 'precise'.
      dist: precise
      env: WP_VERSION=master PHPUNIT=1
    - php: nightly
      env: WP_VERSION=latest PHPUNIT=1
    - stage: deploy-to-github-dist
      env: WP_VERSION=latest
      if: tag IS present
      before_install:
        - openssl aes-256-cbc -K $encrypted_b489f7a38f66_key -iv $encrypted_b489f7a38f66_iv -in ./deploy_keys/wpseo_news_deploy.enc -out ./deploy_keys/wpseo_news_deploy -d
        - chmod 600 ./deploy_keys/wpseo_news_deploy
        - eval $(ssh-agent -s)
        - ssh-add ./deploy_keys/wpseo_news_deploy
      before_deploy:
        - nvm install node
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH=$HOME/.yarn/bin:$PATH
        - yarn global add grunt-cli
        - yarn install
        - grunt set-version -new-version=$TRAVIS_TAG
        - grunt update-version
        - grunt create:artifact
      # If the commit was tagged, create an artifact and push it to the distribution github
      deploy:
        skip_cleanup: true
        provider: script
        script: bash scripts/deploy_to_dist.sh $TRAVIS_TAG wpseo-news
        on:
          tags: true
          repo: $TRAVIS_REPO_SLUG
          all_branches: true
  allow_failures:
    # Allow failures for unstable builds.
    - php: nightly
      env: WP_VERSION=latest
    - php: 7.3
      env: WP_VERSION=master

before_install:
- if [[ "$COVERAGE" != "1" ]]; then phpenv config-rm xdebug.ini || echo 'No xdebug config.'; fi

install:
- if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then phpenv local 5.6.13; fi
- |
  if [[ "$PHPCS" == "1" ]]; then
    composer install --no-interaction
    composer config-yoastcs
  else
    composer install --no-dev --no-interaction
  fi
- if [[ ${TRAVIS_PHP_VERSION:0:1} == "7" || $TRAVIS_PHP_VERSION == "nightly" ]]; then composer require --dev phpunit/phpunit ^5.7; fi
- phpenv local --unset

before_script:
# Careful: The HTTPS version of the following URL is different, therefore we need to use HTTP.
- |
  if [[ "$WP_VERSION" == "latest" ]]; then
    curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
    WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
  fi
- PLUGIN_SLUG=$(basename $(pwd))
- export WP_DEVELOP_DIR=/tmp/wordpress/
- export -f travis_fold
- export -f travis_time_start
- export -f travis_time_finish

- |
  if [[ "$COVERAGE" == "1" ]]; then
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build
  fi

# Clone WordPress
#
- git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress

# Clone WPSEO and its submodule
#
- git clone --depth=1 --branch="trunk" https://github.com/Yoast/wordpress-seo.git $WP_DEVELOP_DIR/src/wp-content/plugins/wordpress-seo
- cd /tmp/wordpress/src/wp-content/plugins/wordpress-seo
- if [[ $TRAVIS_PHP_VERSION == "5.2" ]]; then phpenv local 5.6.13; fi
- composer install --no-dev --no-interaction --ignore-platform-reqs
- phpenv local --unset
- cd -

# Copy news seo to test dir
- cd ..
- cp -r "$PLUGIN_SLUG" "$WP_DEVELOP_DIR/src/wp-content/plugins/$PLUGIN_SLUG"
- cd /tmp/wordpress/
- cp wp-tests-config-sample.php wp-tests-config.php
- sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
- sed -i "s/yourusernamehere/travis/" wp-tests-config.php
- sed -i "s/yourpasswordhere//" wp-tests-config.php
- mysql -e "CREATE DATABASE wordpress_tests;" -uroot
- cd "$WP_DEVELOP_DIR/src/wp-content/plugins/$PLUGIN_SLUG"
- phpenv rehash

script:
# JavaScript checks
- |
  if [[ "$CHECKS" == "1" ]]; then
    travis_fold start "JavaScript.check" && travis_time_start
    npm install -g grunt-cli && npm install --no-optional && grunt check:js
    travis_time_finish && travis_fold end "JavaScript.check"
  fi
# PHP Linting
- |
  if [[ "$PHPLINT" == "1" ]]; then
    travis_fold start "PHP.check" && travis_time_start
    find -L . -path ./vendor -prune -o -path ./node_modules -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
    travis_time_finish && travis_fold end "PHP.check"
  fi
# PHP Code Style
- |
  if [[ "$PHPCS" == "1" ]]; then
    travis_fold start "PHP.code-style" && travis_time_start
    vendor/bin/phpcs -q --runtime-set ignore_warnings_on_exit 1
    travis_time_finish && travis_fold end "PHP.code-style"
  fi
# PHP Tests
- |
  if [[ "$PHPUNIT" == "1" ]]; then
    travis_fold start "PHP.tests" && travis_time_start
    if [[ ${TRAVIS_PHP_VERSION:0:1} == "5" ]]; then
        phpunit
    fi
    if [[ ${TRAVIS_PHP_VERSION:0:1} == "7" || $TRAVIS_PHP_VERSION == "nightly" ]]; then
        vendor/bin/phpunit
    fi
    travis_time_finish && travis_fold end "PHP.tests"
  fi
# PHP Coverage
- |
  if [[ "$COVERAGE" == "1" ]]; then
    travis_fold start "PHP.coverage" && travis_time_start
    vendor/bin/phpunit --coverage-clover build/logs/clover.xml
    travis_time_finish && travis_fold end "PHP.coverage"
  fi
- if [[ $TRAVIS_PHP_VERSION == "5.6" || $TRAVIS_PHP_VERSION == "7.2" ]]; then composer validate --no-check-all; fi

after_script:
  - if [[ "$COVERAGE" == "1" ]]; then ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT; fi
